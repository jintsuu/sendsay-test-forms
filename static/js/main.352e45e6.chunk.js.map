{"version":3,"sources":["components/FileButton.js","components/MessagesBox.js","App.js","serviceWorker.js","index.js","img/del.svg"],"names":["FileButton","_ref","buttonCounter","addFile","deleteFile","index","react_default","a","createElement","className","id","concat","type","onChange","e","target","files","htmlFor","src","del","alt","onClick","MessagesBox","isMessagesSended","messages","reverse","map","item","key","date","subject","status","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dropRef","React","createRef","handleDrag","preventDefault","stopPropagation","handleDragIn","dragCounter","dataTransfer","items","length","setState","dragging","handleDragOut","handleDrop","data","i","len","addButtonsIntoArr","counter","arguments","undefined","buttons","state","push","component","number","file","content","sizes","newFileSize","size","newSizeSum","sizeSum","button","document","getElementById","fileInput","reader","FileReader","setAttribute","onload","result","name","encoding","console","log","readAsDataURL","innerHTML","alert","value","newSum","filter","el","reduce","sum","sendMail","fromName","fromMail","toName","toMail","text","Date","mailDate","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","newMessage","params","action","letter","from.name","from.email","to.name","message","attaches","sendwhen","mca","session","request","encodeURIComponent","JSON","stringify","fetch","method","headers","Content-Type","body","then","res","json","catch","err","div","current","addEventListener","removeEventListener","_this2","_this$state","onSubmit","ref","minLength","maxLength","placeholder","required","rows","components_FileButton","components_MessagesBox","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"4MAeeA,EAVI,SAAAC,GAAkD,IAA/CC,EAA+CD,EAA/CC,cAAeC,EAAgCF,EAAhCE,QAASC,EAAuBH,EAAvBG,WAAYC,EAAWJ,EAAXI,MACrD,OACGC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBC,GAAE,UAAAC,OAAYN,IAC9CC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAaG,KAAK,OAAOF,GAAE,QAAAC,OAAUN,GAASQ,SAAW,SAACC,GAAD,OAAOX,EAAQW,EAAEC,OAAOC,MAAM,OACxGV,EAAAC,EAAAC,cAAA,SAAOS,QAAO,QAAAN,OAAUN,GAASI,UAAU,aAAaC,GAAE,SAAAC,OAAWN,IAArE,0BACAC,EAAAC,EAAAC,cAAA,OAAKU,IAAMC,IAAMC,IAAI,SAASX,UAAYP,IAAkBG,EAAQ,WAAa,aAAegB,QAAU,kBAAMjB,EAAWC,QCiCxHiB,EAzCK,SAAArB,GAAoC,IAAjCsB,EAAiCtB,EAAjCsB,iBAAkBC,EAAevB,EAAfuB,SAErC,OACIlB,EAAAC,EAAAC,cAAA,OAAKC,UAAYc,EAAmB,eAAiB,YACnDjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,QAGAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,WAGAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,WAIFH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEXe,EAASC,UAAUC,IAAK,SAACC,EAAMtB,GAC7B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBmB,IAAKvB,GACnCC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cACTkB,EAAKE,MAETvB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBACTkB,EAAKG,SAETxB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBACTkB,EAAKI,eCoShBC,qBA3Tb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAgBFI,QAAUC,IAAMC,YAjBFT,EAmBdU,WAAa,SAAC7B,GACZA,EAAE8B,iBACF9B,EAAE+B,mBArBUZ,EAwBda,aAAe,SAAChC,GACdA,EAAE8B,iBACF9B,EAAE+B,kBACFZ,EAAKc,cACFjC,EAAEkC,aAAaC,OAASnC,EAAEkC,aAAaC,MAAMC,OAAS,GACvDjB,EAAKkB,SAAS,CAAEC,UAAU,KA7BhBnB,EAiCdoB,cAAgB,SAACvC,GACfA,EAAE8B,iBACF9B,EAAE+B,kBACFZ,EAAKc,cACoB,IAArBd,EAAKc,aACPd,EAAKkB,SAAS,CAAEC,UAAU,KAtChBnB,EA0CdqB,WAAa,SAACxC,GACZA,EAAE8B,iBACF9B,EAAE+B,kBACFZ,EAAKkB,SAAS,CACZC,UAAU,IAEZ,IAAMG,EAAOzC,EAAEkC,aAAahC,MAC5B,GAAIuC,GAAQA,EAAKL,OAAS,EACxB,IAAI,IAAIM,EAAI,EAAGC,EAAMF,EAAKL,OAAQM,EAAIC,EAAKD,IACzCvB,EAAK9B,QAAQoD,EAAKC,KAnDVvB,EA+EdyB,kBAAoB,WAAiB,IAAhBC,EAAgBC,UAAAV,OAAA,QAAAW,IAAAD,UAAA,GAAAA,UAAA,GAAN,EACzBE,EAAU7B,EAAK8B,MAAMD,QAEzBA,EAAQE,KAAK,CACXC,UAAW,GACXC,OAAQP,IAGV1B,EAAKkB,SAAS,CACZW,QAASA,KAxFC7B,EA6Fd9B,QAAU,SAACgE,GACT,IAWMC,EAXFT,EAAU1B,EAAK8B,MAAM7D,cACnBmE,EAAQpC,EAAK8B,MAAMM,MACnBC,EAAcH,EAAKI,KAAK,KAAK,KAC7BC,EAAcF,EAAcrC,EAAK8B,MAAMU,QACvCC,EAASC,SAASC,eAAT,SAAAjE,OAAiCgD,IAC1CkB,EAAYF,SAASC,eAAT,QAAAjE,OAAgCgD,IAE5CmB,EAAS,IAAIC,WAEhBT,EAAc,GAAKE,EAAa,IACjCK,EAAUG,aAAa,WAAY,IAEnCF,EAAOG,OAAS,SAACnE,GACfsD,EAAUtD,EAAEC,OAAOmE,OACnBjD,EAAK8B,MAAM/C,MAAMgD,KAAK,CACpBG,KAAM,CACNgB,KAAMhB,EAAKgB,KACXf,QAASA,EACTgB,SAAU,UAEVlB,OAAQP,KAGZ0B,QAAQC,IAAIrD,EAAK8B,MAAM/C,OACvB8D,EAAOS,cAAcpB,GACrBO,EAAOc,UAAYrB,EAAKgB,KACxBxB,IACAU,EAAML,KAAK,CACTO,KAAMD,EACNJ,OAAQP,IAGV1B,EAAKkB,SAAS,CACZjD,cAAeyD,EACfc,QAASD,EACTH,MAAOA,GACN,kBAAMpC,EAAKyB,kBAAkBC,MAExBW,EAAc,GACtBmB,MAAM,2BACNZ,EAAUa,MAAQ,IACVlB,EAAa,KACrBiB,MAAM,kCACNZ,EAAUa,MAAQ,KAzIRzD,EA+Id7B,WAAa,SAACC,GACZ,IAGIsF,EAHA7B,EAAU7B,EAAK8B,MAAMD,QACrB9C,EAAQiB,EAAK8B,MAAM/C,MACnBqD,EAAQpC,EAAK8B,MAAMM,MAEvBrD,EAAQA,EAAM4E,OAAO,SAAAC,GAAE,OAAIA,EAAG3B,SAAW7D,EAAM,IAC/CyD,EAAUA,EAAQ8B,OAAO,SAAAC,GAAE,OAAIA,EAAG3B,SAAW7D,IAE7CsF,GADAtB,EAAQA,EAAMuB,OAAO,SAAAC,GAAE,OAAIA,EAAG3B,SAAW7D,EAAM,KAChCyF,OAAO,SAACC,EAAD9F,GAAA,OAAmB8F,EAAnB9F,EAAQsE,MAAuB,GACrDc,QAAQC,IAAItE,GACZiB,EAAKkB,SAAS,CACZnC,MAAOA,EACPyD,QAASkB,EACTtB,MAAOA,EACPP,QAASA,KA7JC7B,EAoKd+D,SAAW,SAAClF,GACVA,EAAE8B,iBACF,IAAIqD,EAAWtB,SAASC,eAAe,YACnCsB,EAAWvB,SAASC,eAAe,YACnCuB,EAASxB,SAASC,eAAe,UACjCwB,EAASzB,SAASC,eAAe,UACjC9C,EAAU6C,SAASC,eAAe,WAClCyB,EAAO1B,SAASC,eAAe,QAK7B/C,EAAO,IAAIyE,KACXC,EAAQ,GAAA5F,OAAMkB,EAAK2E,UAAX,KAAA7F,OAJK,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAClE,OAAQ,SAAU,YAAa,UAAW,WAAY,YAGPkB,EAAK4E,YAAxC,KAAA9F,OAAuDkB,EAAK6E,cAA5D,KAAA/F,OAA6EkB,EAAK8E,WAAlF,KAAAhG,OAAgGkB,EAAK+E,aAArG,KAAAjG,OAAqHkB,EAAKgF,cAGlIC,EAAa,CACjBhF,QAASA,EAAQ4D,MACjBO,SAAUA,EAASP,MACnBQ,SAAUA,EAASR,MACnBS,OAAQA,EAAOT,MACfU,OAAQA,EAAOV,MACfW,KAAMA,EAAKX,MACX7D,KAAM0E,EACNxE,OAAQ,UAGJP,EAAWS,EAAK8B,MAAMvC,SAE5BA,EAASwC,KAAK8C,GAEd7E,EAAKkB,SAAS,CACZ3B,SAAUA,EACVD,kBAAkB,IAEpB,IAAIwF,EAAS,CACXC,OAAW,kBACXC,OAAW,CACTnF,QAAYA,EAAQ4D,MACpBwB,YAAcjB,EAASP,MACvByB,aAAejB,EAASR,MACxB0B,UAAYjB,EAAOT,MACnB2B,QAAW,CAAChB,KAASA,EAAKX,OAC1B4B,SAAYrF,EAAK8B,MAAM/C,OAEzBuG,SAAY,OACZC,IAAO,CACLpB,EAAOV,OAET+B,QAAW,2GAGTC,EAAU,WAAaC,mBAAmBC,KAAKC,UAAUd,IAE7De,MAAM,iDAAkD,CACtDC,OAAQ,OACRC,QAAS,CACPC,eAAgB,oDAElBC,KAAMR,IAEPS,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GAAG,OAAI/C,QAAQC,IAAI8C,KACxBE,MAAM,SAAAC,GAAG,OAAIlD,QAAQC,IAAIiD,KAI1BtC,EAASP,MAAQ,GACjBQ,EAASR,MAAQ,GACjBS,EAAOT,MAAQ,GACfU,EAAOV,MAAQ,GACf5D,EAAQ4D,MAAQ,GAChBW,EAAKX,MAAQ,GAEbzD,EAAKkB,SAAS,CACZsB,QAAS,EACTvE,cAAe,EACfc,MAAO,GACPqD,MAAO,GACPP,QAAS,IACR,kBAAM7B,EAAKyB,uBAlPdzB,EAAK8B,MAAQ,CACX7D,cAAe,EACfuE,QAAS,EACTJ,MAAO,GACPP,QAAS,GACT9C,MAAO,GACPoC,UAAU,EACV5B,SAAU,GACVD,kBAAkB,GAVRU,mFAyDZG,KAAKW,YAAc,EACnB,IAAIyF,EAAMpG,KAAKI,QAAQiG,QACvBD,EAAIE,iBAAiB,YAAatG,KAAKU,cACvC0F,EAAIE,iBAAiB,YAAatG,KAAKiB,eACvCmF,EAAIE,iBAAiB,WAAYtG,KAAKO,YACtC6F,EAAIE,iBAAiB,OAAQtG,KAAKkB,YAElClB,KAAKsB,mEAIL,IAAI8E,EAAMpG,KAAKI,QAAQiG,QACvBD,EAAIG,oBAAoB,YAAavG,KAAKU,cAC1C0F,EAAIG,oBAAoB,YAAavG,KAAKiB,eAC1CmF,EAAIG,oBAAoB,WAAYvG,KAAKO,YACzC6F,EAAIG,oBAAoB,OAAQvG,KAAKkB,6CAoL9B,IAAAsF,EAAAxG,KAAAyG,EAC2EzG,KAAK2B,MAA/E7D,EADD2I,EACC3I,cAAekD,EADhByF,EACgBzF,SAAUqB,EAD1BoE,EAC0BpE,QAASlD,EADnCsH,EACmCtH,iBAAkBC,EADrDqH,EACqDrH,SAAUsC,EAD/D+E,EAC+D/E,QAEtE,OACExD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,QAAMsI,SAAW1G,KAAK4D,SAAWvF,UAAU,OAAOsI,IAAM3G,KAAKI,SAC3DlC,EAAAC,EAAAC,cAAA,OAAKC,UAAY2C,EAAW,YAAc,YACxC9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAmBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAb,mBAEpCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,YACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QAAQG,KAAK,OAAOF,GAAG,WAAWyE,KAAK,YAAY6D,UAAU,IAAIC,UAAU,KAAKC,YAAY,YAAYC,UAAQ,IACjI7I,EAAAC,EAAAC,cAAA,SAAOS,QAAQ,YAAYR,UAAU,SAArC,cAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QAAQG,KAAK,QAAQF,GAAG,WAAWyE,KAAK,YAAY+D,YAAY,aAAaC,UAAQ,IACtG7I,EAAAC,EAAAC,cAAA,SAAOS,QAAQ,YAAYR,UAAU,SAArC,eAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QAAQG,KAAK,OAAOF,GAAG,SAASyE,KAAK,UAAU6D,UAAU,IAAIC,UAAU,KAAKC,YAAY,gBAAgBC,UAAQ,IACjI7I,EAAAC,EAAAC,cAAA,SAAOS,QAAQ,YAAYR,UAAU,SAArC,kBAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QAAQG,KAAK,QAAQF,GAAG,SAASyE,KAAK,UAAU+D,YAAY,iBAAkBC,UAAQ,IACvG7I,EAAAC,EAAAC,cAAA,SAAOS,QAAQ,YAAYR,UAAU,SAArC,mBAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QAAQG,KAAK,OAAOF,GAAG,UAAUyE,KAAK,UAAU6D,UAAU,IAAIE,YAAY,kBAAmBC,UAAQ,IACtH7I,EAAAC,EAAAC,cAAA,SAAOS,QAAQ,UAAUR,UAAU,SAAnC,qBAGJH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,WAAWC,GAAG,OAAO0I,KAAK,IAAIF,YAAY,2BAA2BF,UAAU,KAAKG,UAAQ,IAEhH7I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAEXqD,EAAQpC,IAAI,SAACC,GAOX,OANAA,EAAKsC,UAAY3D,EAAAC,EAAAC,cAAC6I,EAAD,CACbnJ,cAAkBA,EAClBG,MAAQsB,EAAKuC,OACbtC,IAAMD,EAAKuC,OACX/D,QAAUyI,EAAKzI,QACfC,WAAawI,EAAKxI,aACfuB,EAAKsC,aAKlB3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,iCAA0BiE,EAA1B,OACAnE,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,0CAGFF,EAAAC,EAAAC,cAAA,SAAOI,KAAK,SAASH,UAAU,aAAaiF,MAAQ,WAGtDpF,EAAAC,EAAAC,cAAC8I,EAAD,CAAa/H,iBAAmBA,EAAmBC,SAAWA,YAtTpD+H,cCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOxJ,EAAAC,EAAAC,cAACuJ,EAAD,MAASpF,SAASC,eAAe,SD4H3C,kBAAmBoF,WACrBA,UAAUC,cAAcC,MAAM/B,KAAK,SAAAgC,GACjCA,EAAaC,kCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.352e45e6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport del from '../img/del.svg';\r\n\r\n\r\nconst FileButton = ({ buttonCounter, addFile, deleteFile, index}) => {\r\n     return(\r\n        <div className=\"file-input-wrapper\" id={`button-${index}`}>\r\n            <input className=\"file-input\" type=\"file\" id={`file-${index}`} onChange={ (e) => addFile(e.target.files[0]) }/>\r\n            <label htmlFor={`file-${index}`} className=\"file-label\" id={`label-${index}`}>Add some file into me!</label>\r\n            <img src={ del } alt=\"Delete\" className={ buttonCounter === index ? \"disabled\" : \"delete-btn\" } onClick={ () => deleteFile(index) } />\r\n        </div> \r\n    );\r\n}\r\n\r\nexport default FileButton;","import React from 'react';\r\n\r\nconst MessagesBox = ({ isMessagesSended, messages }) => {\r\n\r\n    return(\r\n        <div className={ isMessagesSended ? \"messages-box\" : \"disabled\" }>\r\n          <div className=\"messages-box__wrapper\">\r\n            <ul className=\"messages-box__titles\">\r\n              <li className=\"titles__item\">\r\n                Date\r\n              </li>\r\n              <li className=\"titles__item\">\r\n                Subject\r\n              </li>\r\n              <li className=\"titles__item\">\r\n                Status\r\n              </li>\r\n            </ul>\r\n            <hr />\r\n            <div className=\"messages\">\r\n              {\r\n                messages.reverse().map( (item, index) => {\r\n                  return(\r\n                    <div className=\"messages__item\" key={index}>\r\n                      <p className=\"item__date\">\r\n                        { item.date }\r\n                      </p>\r\n                      <p className=\"item__subject\">\r\n                        { item.subject }\r\n                      </p> \r\n                      <p className=\"item__status\">\r\n                        { item.status }\r\n                      </p>\r\n                    </div>\r\n                  );\r\n                })\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessagesBox;","import React, { Component } from 'react';\n\nimport FileButton from './components/FileButton';\nimport MessagesBox from './components/MessagesBox';\n\nimport './style.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      buttonCounter: 1,\n      sizeSum: 0,\n      sizes: [], // For displaying total size of files\n      buttons: [],\n      files: [],   // For http-requests\n      dragging: false,\n      messages: [],\n      isMessagesSended: false,\n    };\n  }\n  \n\n  // ---------------------------------- DRAG AND DROP -------------------------------------------\n\n  dropRef = React.createRef();\n\n  handleDrag = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  handleDragIn = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.dragCounter++;\n    if(e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n      this.setState({ dragging: true });\n    }\n  }\n\n  handleDragOut = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.dragCounter--;\n    if (this.dragCounter === 0) {\n      this.setState({ dragging: false });\n    }\n  }\n  \n  handleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.setState({\n      dragging: false\n    });\n    const data = e.dataTransfer.files;\n    if (data && data.length > 0) {\n      for(let i = 0, len = data.length; i < len; i++) {\n        this.addFile(data[i]);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.dragCounter = 0;\n    let div = this.dropRef.current;\n    div.addEventListener('dragenter', this.handleDragIn);\n    div.addEventListener('dragleave', this.handleDragOut);\n    div.addEventListener('dragover', this.handleDrag);\n    div.addEventListener('drop', this.handleDrop);\n\n    this.addButtonsIntoArr();\n  }\n\n  componentWillUnmount() {\n    let div = this.dropRef.current;\n    div.removeEventListener('dragenter', this.handleDragIn);\n    div.removeEventListener('dragleave', this.handleDragOut);\n    div.removeEventListener('dragover', this.handleDrag);\n    div.removeEventListener('drop', this.handleDrop);\n  }\n\n\n\n  // --------------------------- ADDING FILES THROUGH THE BUTTON -------------------------------------\n\n  addButtonsIntoArr = (counter = 1) => {\n    let buttons = this.state.buttons;\n\n    buttons.push({\n      component: \"\",\n      number: counter,\n    });\n\n    this.setState({\n      buttons: buttons,\n    });\n  }\n\n\n  addFile = (file) => {\n    let counter = this.state.buttonCounter;\n    const sizes = this.state.sizes;\n    const newFileSize = file.size/1024/1024;\n    const newSizeSum  = newFileSize + this.state.sizeSum;\n    const button = document.getElementById(`label-${counter}`);\n    const fileInput = document.getElementById(`file-${counter}`);\n\n    const reader = new FileReader();\n\n    if(newFileSize < 5 && newSizeSum < 20) {\n      fileInput.setAttribute(\"disabled\", \"\");\n      let content;\n      reader.onload = (e) => {\n        content = e.target.result;\n        this.state.files.push({\n          file: {\n          name: file.name,\n          content: content,\n          encoding: \"base64\",\n          },\n          number: counter,\n        });\n      }\n      console.log(this.state.files);\n      reader.readAsDataURL(file);\n      button.innerHTML = file.name;\n      counter++;\n      sizes.push({\n        size: newFileSize,\n        number: counter,\n      })\n\n      this.setState({\n        buttonCounter: counter,\n        sizeSum: newSizeSum,\n        sizes: sizes, \n      }, () => this.addButtonsIntoArr(counter));\n\n    } else if(newFileSize > 5){\n      alert(\"Size of file too large!\");\n      fileInput.value = \"\";\n    } else if(newSizeSum > 20) {\n      alert(\"Sum of file's sizes too large!\");\n      fileInput.value = \"\";\n    }\n  }\n\n  // --------------------------------------- DELETING FILES -------------------------------------------\n\n  deleteFile = (index) => {\n    let buttons = this.state.buttons;\n    let files = this.state.files;\n    let sizes = this.state.sizes;\n    let newSum;\n    files = files.filter(el => el.number !== index+1);\n    buttons = buttons.filter(el => el.number !== index);\n    sizes = sizes.filter(el => el.number !== index+1);\n    newSum = sizes.reduce((sum, { size }) => sum + size, 0);\n    console.log(files);\n    this.setState({\n      files: files,\n      sizeSum: newSum,\n      sizes: sizes,\n      buttons: buttons,\n    });\n  }\n  \n\n  // --------------------------------------- SENDING REQUEST TO API -------------------------------------\n\n  sendMail = (e) => {\n    e.preventDefault();\n    let fromName = document.getElementById(\"fromName\");\n    let fromMail = document.getElementById(\"fromMail\");\n    let toName = document.getElementById(\"toName\");\n    let toMail = document.getElementById(\"toMail\");\n    let subject = document.getElementById(\"subject\");\n    let text = document.getElementById(\"text\");\n\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n      \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n    const date = new Date();\n    const mailDate = `${date.getDate()} ${monthNames[date.getMonth()]} ${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\n\n  \n    const newMessage = {\n      subject: subject.value,\n      fromName: fromName.value,\n      fromMail: fromMail.value,\n      toName: toName.value,\n      toMail: toMail.value,\n      text: text.value,\n      date: mailDate,\n      status: \"sended\",\n    }\n\n    const messages = this.state.messages;\n\n    messages.push(newMessage);\n\n    this.setState({\n      messages: messages,\n      isMessagesSended: true,\n    })\n    var params = { \n      \"action\" : \"issue.send.test\",\n      \"letter\" : {\n        \"subject\" : subject.value,\n        \"from.name\" : fromName.value, \n        \"from.email\" : fromMail.value,\n        \"to.name\" : toName.value,\n        \"message\": {\"text\" : text.value },\n        \"attaches\": this.state.files\n      },\n      \"sendwhen\": \"test\",\n      \"mca\": [\n        toMail.value,\n      ],\n      \"session\": \"Брать из cookies по ключу session\",\n    };\n\n    var request = \"request=\" + encodeURIComponent(JSON.stringify(params));\n\n    fetch(\"https://api.sendsay.ru/?apiversion=100&json=1&\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\",\n      },\n      body: request,\n    })\n    .then(res => res.json())\n    .then(res => console.log(res))\n    .catch(err => console.log(err));\n\n    // Cleaning the form\n\n    fromName.value = \"\";\n    fromMail.value = \"\";\n    toName.value = \"\";\n    toMail.value = \"\";\n    subject.value = \"\";\n    text.value = \"\";\n\n    this.setState({\n      sizeSum: 0,\n      buttonCounter: 1,\n      files: [],\n      sizes: [],\n      buttons: [],\n    }, () => this.addButtonsIntoArr());\n\n    \n  }\n  \n\n  // ---------------------------------------- REDNER ----------------------------------\n\n  render() {\n    const { buttonCounter, dragging, sizeSum, isMessagesSended, messages, buttons } = this.state;\n\n    return (\n      <div className=\"App\">\n        <form onSubmit={ this.sendMail } className=\"form\" ref={ this.dropRef }>\n          <div className={ dragging ? \"drop-zone\" : \"disabled\"}>\n            <div className=\"drop-zone--inner\"><p className=\"drop-zone__text\">Drop me Here!</p></div>\n          </div>\n          <h1 className=\"form__heading\">BestMail</h1>\n          <div className=\"form__inputs\">\n            <div className=\"input-wrapper\">\n              <input className=\"input\" type=\"text\" id=\"fromName\" name=\"from-name\" minLength=\"2\" maxLength=\"20\" placeholder=\"Your Name\" required />\n              <label htmlFor=\"from-name\" className=\"label\">Your Name</label>\n            </div>\n            <div className=\"input-wrapper\">\n              <input className=\"input\" type=\"email\" id=\"fromMail\" name=\"from-mail\" placeholder=\"Your Email\" required />\n              <label htmlFor=\"from-name\" className=\"label\">Your Email</label>\n            </div>\n            <div className=\"input-wrapper\">\n              <input className=\"input\" type=\"text\" id=\"toName\" name=\"to-name\" minLength=\"2\" maxLength=\"20\" placeholder=\"Receiver Name\" required />\n              <label htmlFor=\"from-name\" className=\"label\">Receiver Name</label>\n            </div>\n            <div className=\"input-wrapper\">\n              <input className=\"input\" type=\"email\" id=\"toMail\" name=\"to-mail\" placeholder=\"Receiver Email\"  required />\n              <label htmlFor=\"from-name\" className=\"label\">Receiver Email</label>\n            </div>\n            <div className=\"input-wrapper input--subject\">\n              <input className=\"input\" type=\"text\" id=\"subject\" name=\"subject\" minLength=\"4\" placeholder=\"Message Subject\"  required />\n              <label htmlFor=\"subject\" className=\"label\">Message Subject</label>\n            </div>\n          </div>\n          <textarea className=\"textarea\" id=\"text\" rows=\"7\" placeholder=\"Write your message here!\" minLength=\"10\" required></textarea>\n\n          <div className=\"files\">\n            { \n              buttons.map((item) => {\n                item.component = <FileButton \n                    buttonCounter = { buttonCounter }\n                    index={ item.number }\n                    key={ item.number } \n                    addFile={ this.addFile } \n                    deleteFile={ this.deleteFile } />\n                return item.component\n              })\n            }\n          </div>\n\n          <div className=\"files-size\">\n            <p>Total size of files: { sizeSum } MB</p>\n            <p>Max size of one file: 5 MB</p>\n            <p>Max size of all files: 20 MB</p>\n          </div>\n\n          <input type=\"submit\" className=\"submit-btn\" value = \"Send!\"/>\n        </form>\n\n        <MessagesBox isMessagesSended={ isMessagesSended } messages={ messages } />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/del.fd8b42e2.svg\";"],"sourceRoot":""}